name: Docker Security Scan

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'infrastructure/docker/**'
      - 'docker-compose*.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'infrastructure/docker/**'
      - 'docker-compose*.yml'
  schedule:
    # Run weekly security scans
    - cron: '0 2 * * 1'

jobs:
  security-scan:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build Docker images
      run: |
        docker-compose build

    - name: Run Trivy vulnerability scanner - API
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'nodeangularfullstack-api:latest'
        format: 'sarif'
        output: 'api-security-results.sarif'

    - name: Run Trivy vulnerability scanner - Web
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'nodeangularfullstack-web:latest'
        format: 'sarif'
        output: 'web-security-results.sarif'

    - name: Upload Trivy scan results - API
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'api-security-results.sarif'

    - name: Upload Trivy scan results - Web
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'web-security-results.sarif'

    - name: Docker Bench Security
      run: |
        docker run --rm --net host --pid host --userns host --cap-add audit_control \
          -e DOCKER_CONTENT_TRUST=$DOCKER_CONTENT_TRUST \
          -v /etc:/etc:ro \
          -v /usr/bin/containerd:/usr/bin/containerd:ro \
          -v /usr/bin/runc:/usr/bin/runc:ro \
          -v /usr/lib/systemd:/usr/lib/systemd:ro \
          -v /var/lib:/var/lib:ro \
          -v /var/run/docker.sock:/var/run/docker.sock:ro \
          --label docker_bench_security \
          docker/docker-bench-security

    - name: Container Structure Test
      run: |
        # Install container-structure-test
        curl -LO https://storage.googleapis.com/container-structure-test/latest/container-structure-test-linux-amd64
        chmod +x container-structure-test-linux-amd64
        sudo mv container-structure-test-linux-amd64 /usr/local/bin/container-structure-test

        # Create basic structure tests
        cat > container-tests.yaml << EOF
        schemaVersion: 2.0.0
        commandTests:
          - name: "Check API health endpoint"
            command: "curl"
            args: ["-f", "http://localhost:3000/health"]
            exitCode: 0
        fileExistenceTests:
          - name: "Node.js is installed"
            path: "/usr/local/bin/node"
            shouldExist: true
        EOF

        # Run tests
        container-structure-test test --image nodeangularfullstack-api:latest --config container-tests.yaml