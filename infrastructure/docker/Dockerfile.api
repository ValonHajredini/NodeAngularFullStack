# Multi-stage Dockerfile for Express.js API
# Stage 1: Dependencies
FROM node:20-alpine AS dependencies

# Install build tools for native dependencies
RUN apk add --no-cache python3 make g++

WORKDIR /app

# Copy package files from both root and api app
COPY package*.json ./
COPY apps/api/package*.json ./apps/api/
COPY packages/shared/package*.json ./packages/shared/
COPY packages/config/package*.json ./packages/config/

# Install dependencies using npm ci for faster, reliable builds
RUN npm ci --workspace=apps/api --include-workspace-root

# Stage 2: Build
FROM node:20-alpine AS build

WORKDIR /app

# Copy dependencies from previous stage
COPY --from=dependencies /app/node_modules ./node_modules
COPY --from=dependencies /app/apps/api/node_modules ./apps/api/node_modules

# Copy source code
COPY package*.json ./
COPY tsconfig.json ./
COPY apps/api ./apps/api
COPY packages ./packages

# Build TypeScript application
RUN npm run build --workspace=apps/api

# Stage 3: Production
FROM node:20-alpine AS production

# Create non-root user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001

WORKDIR /app

# Copy production dependencies and built application
COPY --from=dependencies --chown=nodejs:nodejs /app/node_modules ./node_modules
COPY --from=dependencies --chown=nodejs:nodejs /app/apps/api/node_modules ./apps/api/node_modules
COPY --from=build --chown=nodejs:nodejs /app/apps/api/dist ./apps/api/dist
COPY --from=build --chown=nodejs:nodejs /app/packages ./packages
COPY --chown=nodejs:nodejs package*.json ./
COPY --chown=nodejs:nodejs apps/api/package*.json ./apps/api/

# Switch to non-root user
USER nodejs

# Expose port 3000
EXPOSE 3000

# Health check configuration
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD node -e "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1); });"

# Set environment to production by default
ENV NODE_ENV=production

# Start the application
CMD ["node", "apps/api/dist/server.js"]