.theme-management-container {
  padding: 1.5rem;
  max-width: 1400px;
  margin: 0 auto;

  .theme-color-preview {
    min-width: 2rem;
    min-height: 2rem;
    border: 1px solid var(--surface-border);
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  }

  .theme-preview-content {
    .space-y-4 > * + * {
      margin-top: 1rem;
    }
  }

  // Table customizations
  ::ng-deep {
    .p-datatable {
      .p-datatable-header {
        background: var(--surface-50);
        border: 1px solid var(--surface-border);
        border-bottom: none;
      }

      .p-datatable-thead > tr > th {
        background: var(--surface-100);
        border-color: var(--surface-border);
        font-weight: 600;
        font-size: 0.875rem;
      }

      .p-datatable-tbody > tr > td {
        border-color: var(--surface-border);
        padding: 0.75rem;
      }

      .p-datatable-tbody > tr:nth-child(even) {
        background: var(--surface-25);
      }

      .p-datatable-tbody > tr:hover {
        background: var(--surface-50);
      }
    }

    // Toolbar styling
    .p-toolbar {
      background: var(--surface-50);
      border: 1px solid var(--surface-border);
      border-radius: 6px;
      padding: 0.75rem 1rem;

      .p-toolbar-group-start,
      .p-toolbar-group-end {
        display: flex;
        align-items: center;
        gap: 0.5rem;
      }
    }

    // Dialog styling
    .p-dialog {
      .p-dialog-header {
        background: var(--surface-50);
        border-bottom: 1px solid var(--surface-border);
        font-weight: 600;
      }

      .p-dialog-content {
        padding: 1.5rem;
      }

      .p-dialog-footer {
        background: var(--surface-50);
        border-top: 1px solid var(--surface-border);
        padding: 1rem 1.5rem;
        display: flex;
        justify-content: flex-end;
        gap: 0.75rem;
      }
    }

    // File upload styling
    .p-fileupload {
      .p-fileupload-choose {
        border-radius: 6px;
      }
    }

    // Button spacing in action columns
    .p-button {
      &.p-button-outlined {
        border-width: 1px;
      }

      &.p-button-sm {
        padding: 0.375rem 0.75rem;
        font-size: 0.875rem;
      }
    }

    // Tag styling
    .p-tag {
      font-size: 0.75rem;
      font-weight: 500;
      padding: 0.25rem 0.5rem;
    }

    // Progress spinner
    .p-progress-spinner {
      width: 3rem;
      height: 3rem;
    }
  }
}

// Responsive design
@media (max-width: 768px) {
  .theme-management-container {
    padding: 1rem;

    .flex {
      &.gap-3 {
        flex-direction: column;
        gap: 0.75rem;
      }

      &.justify-content-between {
        flex-direction: column;
        align-items: stretch;
        gap: 1rem;
      }
    }

    ::ng-deep {
      .p-datatable {
        font-size: 0.875rem;

        .p-datatable-thead > tr > th,
        .p-datatable-tbody > tr > td {
          padding: 0.5rem;
        }

        // Hide less important columns on mobile
        .p-datatable-thead > tr > th:nth-child(4),
        .p-datatable-tbody > tr > td:nth-child(4),
        .p-datatable-thead > tr > th:nth-child(5),
        .p-datatable-tbody > tr > td:nth-child(5) {
          display: none;
        }
      }

      .p-toolbar {
        .p-toolbar-group-start,
        .p-toolbar-group-end {
          flex-direction: column;
          align-items: stretch;
          width: 100%;
          gap: 0.5rem;
        }
      }

      .p-dialog {
        width: 95vw !important;
        max-width: none !important;
        margin: 1rem;
      }
    }
  }
}

// Color preview hover effects
.theme-color-preview {
  transition:
    transform 0.2s ease,
    box-shadow 0.2s ease;
  cursor: pointer;

  &:hover {
    transform: scale(1.1);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
  }
}

// Loading states
.p-button[data-pc-section='loadingIcon'] {
  animation: spin 1s linear infinite;
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

// Theme preview form styling
.theme-preview-content {
  form {
    input,
    button {
      transition: all 0.2s ease;
    }

    input:focus {
      outline: 2px solid var(--primary-color);
      outline-offset: 2px;
    }

    button:hover {
      transform: translateY(-1px);
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }
  }
}
