-- Migration: test-tool table
-- Description: Create table for Test Tool tool
-- Date: 2025-10-25
--
-- ⚠️ DRAFT: This is a template migration. Review and customize before running.
-- To use:
--   1. Remove .draft suffix from filename
--   2. Customize columns and constraints as needed
--   3. Run: npm --workspace=apps/api run db:migrate

-- Create test_tool table
CREATE TABLE IF NOT EXISTS test_tool (
  -- Primary key
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),

  -- Core fields (customize as needed)
  name VARCHAR(255) NOT NULL,
  description TEXT,

  -- Status and configuration (optional, remove if not needed)
  status VARCHAR(50) DEFAULT 'active',
  settings JSONB DEFAULT '{}',

  -- Metadata
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  created_by UUID NOT NULL REFERENCES users(id) ON DELETE CASCADE,

  -- Constraints
  CONSTRAINT test_tool_name_length CHECK (char_length(name) >= 3 AND char_length(name) <= 255),
  CONSTRAINT test_tool_status_check CHECK (status IN ('active', 'inactive', 'archived'))
);

-- Indexes for common queries
CREATE INDEX idx_test_tool_created_by ON test_tool(created_by);
CREATE INDEX idx_test_tool_created_at ON test_tool(created_at DESC);
CREATE INDEX idx_test_tool_status ON test_tool(status);

-- Updated timestamp trigger
CREATE TRIGGER update_test_tool_updated_at
  BEFORE UPDATE ON test_tool
  FOR EACH ROW
  EXECUTE FUNCTION update_updated_at_column();

-- Table and column comments
COMMENT ON TABLE test_tool IS 'Test Tool data table';
COMMENT ON COLUMN test_tool.id IS 'Unique identifier (UUID v4)';
COMMENT ON COLUMN test_tool.name IS 'Test Tool name (3-255 characters)';
COMMENT ON COLUMN test_tool.description IS 'Optional description of the item';
COMMENT ON COLUMN test_tool.status IS 'Record status (active, inactive, archived)';
COMMENT ON COLUMN test_tool.settings IS 'JSON settings specific to this record';
COMMENT ON COLUMN test_tool.created_by IS 'User who created this record';
COMMENT ON COLUMN test_tool.created_at IS 'Timestamp when record was created';
COMMENT ON COLUMN test_tool.updated_at IS 'Timestamp when record was last updated';

-- Grant permissions (adjust as needed for your security model)
GRANT SELECT, INSERT, UPDATE, DELETE ON test_tool TO authenticated_user;

-- Sample data (optional, for development only)
-- INSERT INTO test_tool (name, description, created_by)
-- VALUES (
--   'Sample Test Tool',
--   'Example record for testing',
--   (SELECT id FROM users WHERE email = 'admin@example.com' LIMIT 1)
-- );
