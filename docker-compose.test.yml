# Docker Compose configuration for CI/CD testing
# This file extends the base docker-compose.yml and is optimized for automated testing

services:
  # API service for testing
  api:
    build:
      context: .
      dockerfile: infrastructure/docker/Dockerfile.api
      target: production
      args:
        BUILD_TARGET: production
    environment:
      NODE_ENV: test
      PORT: 3000
      DATABASE_URL: postgresql://dbuser:dbpassword@db:5432/nodeangularfullstack_test
      REDIS_URL: redis://cache:6379
      JWT_SECRET: test-jwt-secret-key
      JWT_REFRESH_SECRET: test-jwt-refresh-secret
      JWT_EXPIRE_TIME: 15m
      JWT_REFRESH_EXPIRE_TIME: 7d
      LOG_LEVEL: error
    networks:
      - nodeangularfullstack-network
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 5s
      timeout: 3s
      retries: 3

  # Web service for testing
  web:
    build:
      context: .
      dockerfile: infrastructure/docker/Dockerfile.web
      target: production
      args:
        BUILD_TARGET: production
    environment:
      NODE_ENV: test
    networks:
      - nodeangularfullstack-network
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/"]
      interval: 5s
      timeout: 3s
      retries: 3

  # Test database
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: dbuser
      POSTGRES_PASSWORD: dbpassword
      POSTGRES_DB: nodeangularfullstack_test
    volumes:
      - test-db-data:/var/lib/postgresql/data
    networks:
      - nodeangularfullstack-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dbuser -d nodeangularfullstack_test"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Test cache
  cache:
    image: redis:7-alpine
    networks:
      - nodeangularfullstack-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

volumes:
  test-db-data:
    driver: local

networks:
  nodeangularfullstack-network:
    driver: bridge